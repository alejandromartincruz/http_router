<?php


namespace RouterUnit\Domain;

use PHPUnit\Framework\TestCase;
use Router\Application\MatchRouteUseCase;
use Router\Domain\Router;

class RouterTest extends TestCase
{
    private $matchRouteUseCase;

    private $router;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->router = new Router();
    }

    /** @test */
    public function routeNotExistingThrowsException()
    {
        $this->expectException(\Exception::class);

        $this->router->get('/noexiste', function( $args = [] ) { return "texto";});
    }

    /** @test */
    public function existingRouteReturnsKnownString()
    {

        $this->assertEquals($this->router->get('/post', function( $args = [] ) { return "texto";}), "texto");

    }

    /** @test */
    public function existingRouteWithOneArgumentReturnsKnownString()
    {

        $this->assertEquals($this->router->get('/post/5/', function( $args = [] ) { return $args;}), 5);
        // $this->assertCount(1, $this->router->get('/post/5/', function( $args = [] ) { return $args; }));
    }
}